%%% -*- erlang -*-

%% Global definitions
definitions() ->
    [].


config() ->
    configs(dogwood),
    configs(circdb),
    configs(jnets),
    configs(emqttc).


configs(dogwood) ->
    app_depend=[circdb,jnets,ssl,emqttc],
    dogwood();
configs(circdb) ->
    circdb();
configs(jnets) ->
    jnets_servers=[dogwood],
    jnets(dogwood);
configs(emqttc) ->
    mqtt_clients=[dogwood],
    emqttc(combitech).


%% dogwood configuration
dogwood() ->
    accounts=dogwood_accounts(),
    sensors=dogwood_sensors(),
    subscribe_topics=[{combitech,[<<"hplus/loradata/debug/+/json">>]}],
    publish_topics=[<<"hplus/loradata/test/+/json">>].


dogwood_accounts() ->
    #account{user="johan",
	     sensors=[1,2,3],
	     action=to_mqtt
	    }.


dogwood_sensors() ->
    #sensor{id=1,
	    unit= 1,
    	    desc="Raspberry Pi Zero W with Mood Light",
    	    provider={node,'moodle@10.10.69.120'},
	    ts=[1,2]},
    #sensor{id=2,
	    unit= <<"a81758fffe030791">>,
    	    desc="Victors room",
    	    provider=kaa_rest,
	    ts=[1,2]},
    #sensor{id=3,
	    unit= <<"a81758fffe03078f">>,
	    desc="Johans room",
	    provider=kaa_rest,
	    ts=[1,2]
	   }.

%% circdb configuration
circdb() ->
    circdb_tables=circdb_tables(),
    circdb_backup_start={2,10,0},         % First backup at 02:00:00
    circdb_backup_interval=1000*36000*24. % Create backup every day

circdb_tables() ->
    #cdb_table{id=1,delta=4*1000, size=10}, % 10 buckets, new bucket every 4 sec
    #cdb_table{id=2,delta=3600*24*1000, size=100}. % 100 buckets, new every day


%% jnets configuration
jnets(dogwood) ->
    httpd_modules=[mod_dogwood],
    httpd_sockettypes=[http],
    {httpd_port,http}=9999,
    {httpd_bindaddress,http}="0.0.0.0".


%% emqttc configuration
emqttc(combitech) ->
%    mqtt_host="iot.eclipse.org",
%    mqtt_port=1883,

    mqtt_host="dev.mqtt.combitech-iot.net",
    mqtt_port=28889,
    mqtt_transport=ssl,
    mqtt_ssl_opts=[{depth,0},{verify,verify_none},binary,{v2_hello_compatible,true}],
%    mqtt_reconnect={4,60,infinity},
    mqtt_cb={dogwood_manager,event,[mqtt]}.



