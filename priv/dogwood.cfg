%%% -*- erlang -*-

%% Global definitions
definitions() ->
    [].


config() ->
    configs(dogwood),
    configs(data_col),
    configs(circdb),
    configs(jnets),
    configs(emqttc).


configs(dogwood) ->
    app_depend=[circdb,data_col,jnets,ssl,emqttc],
    dogwood();
configs(data_col) ->
    data_col();
configs(circdb) ->
    circdb();
configs(jnets) ->
    jnets_servers=[dogwood],
    jnets(dogwood);
configs(emqttc) ->
    mqtt_clients=[dogwood],
    emqttc(combitech).


%% dogwood configuration
dogwood() ->
    accounts=dogwood_accounts(),
    sensors=dogwood_producers(),
    consumers=dogwood_consumers(),
    subscribe_topics=[{combitech,[<<"hplus/data/debug/+/json">>]}].
%    subscribe_topics=[].


%% A user with an account may:
%% - forward sensor data (fwds), i.e., "push":
%%   List with tuples.
%%   Each tuple consist of a list with sensor ids, and an action to perform 
%%   when new data from that sensor is received.
%% - read sensor data (reads) i.e., "pull":
%%   List with data source ids (#dc_ds{}), with details on what sensor can be
%%   read (and what is also stored in the database).
dogwood_accounts() ->
    #account{user="johan",
%	     fwds=[{[21,31,41],{rpc,call,["daisy@<thishost>",dc_manager,push]}}],
	     fwds=[{[21,31,41],{rpc,call,['daisy@10.0.2.15',dc_manager,update]}}],
%	     fwds=[],
	     reads=[11,21,31,41]
	    },
    #account{user="victor",
	     fwds=[],
	     reads=[21]
	    },
    #account{user="jakob",
	     fwds=[{[21,31],{emqttc_manager,publish,
	     		   ["hplus/loradata/debug/<unitid>/json"]}}],

	     %% fwds=[{[21],{emqttc_manager,publish,
	     %% 		   ["hplus/loradata/debug3/<unitid>/json"]}}],
	     reads=[]
	    }.

dogwood_consumers() ->
    ok.
%    #app{}.


dogwood_producers() ->
    #sensor{id=11,
	    unit= 1,
    	    desc="Raspberry Pi Zero W with Mood Light",
    	    provider=1
	   },
    #sensor{id=21,
	    unit= "a81758fffe030791",
    	    desc="Victors room",
    	    provider=2 % See #dc_ds{} cfg below
	   },
    #sensor{id=31,
	    unit= "a81758fffe03078f",
	    desc="Johans room",
	    provider=2 % See #dc_ds{} cfg below
	   },
    #sensor{id=41,
	    unit= "5c:cf:7f:8b:c8:5a",
	    desc="Jakobs coffe room",
	    provider=3 % See #dc_ds{} cfg below
	   }.


%% data_col configuration
data_col() ->
    dc_devices=dc_devs(),
    dc_inputs=dc_inputs(),
    dc_datasources=dc_ds().

dc_ds() ->
    %% Polled Raspberry Pi motherboard temperature 
    #dc_ds{id=1,
	   device=1, % Erlang node
	   tables=[1,2],input=1,poll=60000},
    %% Pushed sensor data via REST
    #dc_ds{id=2,
	   device=2, % HTTP REST (Acreo)
	   tables=[1,2]},
    %% Pushed sensor data via MQTT 
    #dc_ds{id=3,
	   device=3, % MQTT (Combitech)
	   tables=[1,2]}.
    
dc_devs() ->
    #dc_dev{id=1,type={node,'moodle@10.10.69.120'}},
    #dc_dev{id=2,type={http,kaa}},
    #dc_dev{id=3,type={mqtt,combitech}}.

dc_inputs() ->
    #dc_input{id=1,input={moodle_manager,status,[temp]}}.


%% circdb configuration
circdb() ->
    circdb_tables=circdb_tables(),
    circdb_backup_start={2,10,0},         % First backup at 02:00:00
    circdb_backup_interval=1000*36000*24. % Create backup every day

circdb_tables() ->
    #cdb_table{id=1,delta=4*1000, size=10}, % 10 buckets, new bucket every 4 sec
    #cdb_table{id=2,delta=3600*24*1000, size=100}. % 100 buckets, new every day


%% jnets configuration
jnets(dogwood) ->
    httpd_modules=[mod_dogwood],
    httpd_sockettypes=[http],
    {httpd_port,http}=9999,
    {httpd_bindaddress,http}="0.0.0.0".


%% emqttc configuration
emqttc(combitech) ->
%    mqtt_host="iot.eclipse.org",
%    mqtt_port=1883,

    mqtt_host="dev.mqtt.combitech-iot.net",
    mqtt_port=28889,
    mqtt_transport=ssl,
    mqtt_ssl_opts=[{depth,0},{verify,verify_none},binary,{v2_hello_compatible,true}],
%    mqtt_reconnect={4,60,infinity},
    mqtt_cb={dogwood_manager,event,[mqtt]}.



